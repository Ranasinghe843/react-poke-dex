{"version":3,"sources":["components/Intro.jsx","database.js","components/Card.jsx","components/Team.jsx","components/Poke.jsx","App.js","index.js"],"names":["Intro","Header","React","createElement","src","alt","id","height","width","Instructions","Fragment","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Card","props","_useState","useState","_useState2","_slicedToArray","pokemonCard","setPokemonCard","getAPIData","_ref","_asyncToGenerator","_callee","url","response","responseJSON","types","pokeCard","_context","fetch","json","map","item","className","sprites","front_default","front_shiny","species","weight","base_experience","apply","arguments","useEffect","Teamcard","timestamp","onClick","dataRef","ref","keyPoke","remove","console","log","Catalogcard","data","Date","toISOString","randNum","Math","round","random","toString","set","Team","pokemonCards","setPokemonCards","onValue","snap","pokecards","sub_key","off","Poke","pokeNum","setPokeNum","_useState3","_useState4","results","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6ba5c13a.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Intro.css';\n\nexport default function Intro() {\n\n    const Header = (\n\n        <div>\n            <h1>Pokemon PokeDex Viewer - Intermediate</h1>\n            <img src='https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png' alt='React Logo' id='logo' height='100' width='100'></img>\n            <p>Developed as the Final Project for Software Saturdays Spring 2023</p>\n        </div>\n    )\n\n    const Instructions = (\n        <div id=\"instructions\">\n            <h3>Instructions</h3>\n            <p>\n                Scoll Down to Load Pokemon from the Poke API Database where you will be shown facts about each Pokemon.\n                You can add upto 6 pokemon to your team which will be stored in a FireBase database and can be retrieved.\n                <br></br>\n                <br></br>\n                Create the Ultimate Pokemon Team!\n            </p>\n        </div>\n    )\n\n    return (\n        <>\n        {Header}\n        {Instructions}\n        </>\n  );\n}","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from 'firebase/database';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  // put your config here\r\n  apiKey: \"AIzaSyAhMijYIQJJe-nStZhr_w2L1wsN-yFt1wI\",\r\n  authDomain: \"softwaresaturdays2023-82bdc.firebaseapp.com\",\r\n  databaseURL: \"https://softwaresaturdays2023-82bdc-default-rtdb.firebaseio.com\",\r\n  projectId: \"softwaresaturdays2023-82bdc\",\r\n  storageBucket: \"softwaresaturdays2023-82bdc.appspot.com\",\r\n  messagingSenderId: \"663767516822\",\r\n  appId: \"1:663767516822:web:e8f1435469db13d4c564b7\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst database = getDatabase(app);\r\n\r\nexport { database };\r\n","import React, { useState, useEffect } from 'react';\nimport '../styles/Card.css';\nimport { database } from '../database.js';\nimport { set, remove, ref } from 'firebase/database';\n\nfunction Card(props) {\n\n    const [pokemonCard, setPokemonCard] = useState(null)\n\n    // getAPIData gets the data from the pokeapi, returns an array of pokemon\n    const getAPIData = async () => {\n        /* START OF API CALLING. MODIFY AT YOUR OWN RISK */\n        const url = props.url; // URL of the API\n        const response = await fetch(url); // Get the data from the PokeAPI\n        const responseJSON = await response.json(); // Turn the data into a JSON object that we can use\n\n        const types = responseJSON.types.map((item) => <div className=\"type\">Type: {item.type.name}</div>);\n\n        // This should seem familiar\n        const pokeCard = (\n            <>\n            <div id=\"images\">\n                <img src={responseJSON.sprites.front_default} alt=\"front_default\"></img>\n                <img src={responseJSON.sprites.front_shiny} alt=\"front_default\"></img>\n            </div>\n            <h4>{responseJSON.species.name}</h4>\n            <p>Height: {responseJSON.height}</p>\n            <p>Weight: {responseJSON.weight}</p>\n            <p>Base XP: {responseJSON.base_experience}</p>\n            {types}\n            <p> </p>\n            </>\n        )\n\n        // TODO: Set pokemonCards to the mapped cards\n        setPokemonCard(pokeCard)\n    }\n\n    useEffect(() => {\n        // get api data\n        getAPIData()\n    }, [])\n\n  return (<>{pokemonCard}</>);\n}\n\nfunction Teamcard(props) {\n  \n  const deleteData = () => {\n    const dataRef = ref(database, props.keyPoke);\n    remove(dataRef)\n    .then(() => {\n        console.log(\"Remove was successful\");\n    })\n    .catch((error) => {\n        console.log(\"Remove failed\");\n        console.log(error);\n    });\n}\n  \n  return (\n    <div className=\"Card\">\n      <Card url={props.url}/>\n      <p>Added at:</p>\n      <p>{props.timestamp}</p>\n      <button onClick={deleteData}>Remove from My Team</button>\n      <p></p>\n    </div>\n  );\n}\n\nfunction Catalogcard(props) {\n\n  const createData= () => {\n    let data = {\n        url: props.url,\n        timestamp: (new Date()).toISOString(),\n    }\n    const randNum = Math.round(Math.random() * 1000000)\n    const dataRef = ref(database, randNum.toString());\n    set(dataRef, data)\n    .then(() => {\n        console.log(\"Set was successful\");\n    })\n    .catch((error) => {\n        console.log(\"Set failed\");\n        console.log(error);\n    });\n  }\n\n  return (\n    <div className=\"Card\">\n      <Card url={props.url}/>\n      <button onClick={createData}>Add to My Team</button>\n      <p></p>\n    </div>\n  );\n}\n\nexport default Card;\nexport { Teamcard, Catalogcard };","import React, { useEffect, useState } from 'react';\nimport '../styles/Team.css';\nimport { database } from '../database.js';\nimport { onValue, ref, off } from 'firebase/database';\nimport { Teamcard } from \"./Card\";\n\nexport default function Team() {\n\n    const [pokemonCards, setPokemonCards] = useState(null)\n\n    useEffect(() => {\n        const dataRef = ref(database, '/');\n        onValue(dataRef, (snap) => {\n            // This is just a complicated iterative process\n             //     to read all the data from the database and\n            //     print it to the console. Your data reads\n            //     will use a similar loop, but probably\n            //     not two of them\n            const pokecards = [];\n\n            for(let key in snap.val()) {\n                console.log(key, ':');\n                for(let sub_key in snap.val()[key]) {\n                    console.log('   ',sub_key, ':', snap.val()[key][sub_key]);\n                }\n                console.log('-----------------')\n                pokecards.push(<Teamcard url={snap.val()[key][\"url\"]} keyPoke={key} timestamp={snap.val()[key][\"timestamp\"]}/>);\n            }\n\n            setPokemonCards(pokecards);\n        });\n\n        return () => {\n            const dataRef = ref(database, '/');\n            off(dataRef);\n            console.log(\"Removed listener\");\n        }\n    }, [])\n\n    const Poke = (\n        <div className=\"wrapper\">\n            { pokemonCards }\n        </div>\n    )\n\n    return (\n        <>\n        <hr className=\"line\"></hr>\n        <h2 id='title'>My Team:</h2>\n        {Poke}\n        <hr className=\"line\"></hr>\n        </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/Poke.css';\nimport { Catalogcard } from \"./Card\";\n\nexport default function Poke() {\n\n    const [pokeNum, setPokeNum] = useState(6)\n\n    const [pokemonCards, setPokemonCards] = useState(null)\n\n    // getAPIData gets the data from the pokeapi, returns an array of pokemon\n    const getAPIData = async () => {\n        /* START OF API CALLING. MODIFY AT YOUR OWN RISK */\n        const url = \"https://pokeapi.co/api/v2/pokemon?limit=\"+ pokeNum.toString() +\"&offset=0\"; // URL of the API\n        const response = await fetch(url); // Get the data from the PokeAPI\n        const responseJSON = await response.json(); // Turn the data into a JSON object that we can use\n\n        console.log(responseJSON);\n\n        // This should seem familiar\n        const pokecards = responseJSON.results.map((item) => <Catalogcard url={item.url}/>);\n\n        // TODO: Set pokemonCards to the mapped cards\n        setPokemonCards(pokecards)\n    }\n\n    useEffect(() => {\n        // get api data\n        getAPIData()\n    }, [pokeNum])\n\n    return (\n        <>\n        <div className=\"wrapper\">\n            { pokemonCards }\n        </div>\n        <br></br>\n        <button type=\"button\" onClick={() => setPokeNum(pokeNum + 6)}>Get More Pokemon</button>\n        <br></br>\n        </>\n  );\n}","import React from 'react';\nimport Intro from './components/Intro.jsx'\nimport Team from './components/Team.jsx'\nimport Poke from './components/Poke.jsx'\n\nfunction App() {\n  return (\n    <>\n    <Intro />\n    <br></br>\n    <Team />\n    <br></br>\n    <Poke />\n    <footer>\n      <p>Created by Samitha Ranasinghe</p>\n    </footer>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}